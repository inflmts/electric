##############################################################################
# ----------------------------------------------------------------------------
#   Electric Art
# ----------------------------------------------------------------------------
#
#   Copyright (c) 2024-2025 Daniel Li
#
#   This artwork is licensed under CC-BY-NC-SA 4.0.
#
##############################################################################

-exec '
from random import Random
from math import sin, cos, pi
random = Random("cassie is sus")
'

-def dcirc {
  -exec r,n,f,o=arg
  -exec s=2*pi*r/n
  {
    stroke-dashoffset -eval s*o
    stroke-dasharray -eval s*f -eval s*(1-f)
    circle 0 0 0 -eval r
  }
}

-def bolt {
  -exec h=arg
  (
    -size 50x500 canvas:none
    -draw { stroke rgba(255,255,255,0.35) line 25 0 25 500 }
    (
      -seed -eval random.getrandbits(32)
      -size -eval 'f"1x{h}"' canvas:white +noise random
      -filter triangle -resize 50x500!
    )
    -define compose:args=20x0
    -compose displace -composite
  )
}

-seed 9452358
-fill none -stroke none -strokewidth 4
-font resources/montserrat-bold.ttf
-gravity center

-size 500x500 -define gradient:angle=135
gradient:rgb(300,255,255)-rgb(127,255,255)
(
  canvas:rgb(255,255,160)
  -draw {
    translate 250 250
    { fill rgb(255,255,120) circle 0 0 0 250 }
    { fill rgb(255,255,100) circle 0 0 0 210 }
    { fill rgb(255,255,80) circle 0 0 0 170 }
    { fill rgb(255,255,60) circle 0 0 0 125 }
    { fill rgb(255,255,40) circle 0 0 0 80 }
    { stroke rgb(255,255,170) stroke-width 20 -inject dcirc:253,15,.8,.9 }
    { stroke white -inject dcirc:230,12,.9,.4 }
  }
)
-set colorspace hsl
-compose multiply -composite
-colorspace srgb

(
  -inject bolt:20
  -inject bolt:24 -compose over -composite
  -inject bolt:28 -compose over -composite
)
-size 500x500
radial-gradient:white-none
-compose over -composite

-size 200x200
radial-gradient:rgba(255,255,255,0.25)-none
-compose over -composite

-draw { translate 250 250 fill white path 'M 10,-60 -30,15 -5,10 -10,60 30,-15 5,-10 Z' }
-draw { font-size 40 kerning 10 fill white text 0 120 'ELECTRIC' }

(
  -size 60x3 canvas:rgba(255,255,255,0)
  -set colorspace gray
  -channel A -attenuate 0.45 +noise random +channel
  -set colorspace srgb
  -define gradient:angle=0 gradient:rgba(255,255,255,0.25)-rgba(255,255,255,0.1)
  -compose over -composite
  -filter point -interpolate nearest-neighbor -virtual-pixel none
  -define distort:viewport=500x500+0+0 -distort polar 353.553,270,250,250
)
-compose over -composite

# vim:ft=conf:tw=78
